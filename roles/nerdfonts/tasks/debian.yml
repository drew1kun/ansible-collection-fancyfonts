---
- name: '[debian] Include Debian-specific variables'
  ansible.builtin.include_vars: debian.yml
  tags: nerdfonts

- name: '[debian] Clone the nerdfonts repo'
  ansible.builtin.git:
    repo: https://github.com/ryanoasis/nerd-fonts.git
    dest: /tmp/nerd_fonts
    version: latest
    depth: 1
  tags: nerdfonts

# INSTALLER IS BROKEN
# - name: '[debian] Install nerdfonts system-wide'
#   ansible.builtin.command: "/tmp/nerd_fonts/install.sh -S {{ item.fontname }}"
#   loop: "{{ nerdfonts_fonts }}"
#   when:
#     - nerdfonts_deb_env is defined
#     - "'system' in nerdfonts_deb_env"
#   tags: nerdfonts
#
# - name: '[debian] Install nerdfonts for each user'
#   ansible.builtin.command: "/tmp/nerd_fonts/install.sh -U {{ item[0].fontname }}"
#   become: true
#   become_user: "{{ item[1] }}"
#   with_nested:
#     - "{{ nerdfonts_fonts }}"
#     - "{{ nerdfonts_users }}"
#   when:
#     - nerdfonts_deb_env is defined
#     - "'user' in nerdfonts_deb_env"
#   tags: nerdfonts

# ===================== FIX ========================
- name: '[debian] Setting nerdfonts_install_dir for system-wide installation'
  ansible.builtin.set_fact:
    nerdfonts_install_dir: "{{ nerdfonts_deb_fonts_sys_dir }}"
  when:
    - nerdfonts_deb_env is defined
    - "'system' in nerdfonts_deb_env"
  tags: nerdfonts

- name: '[debian] Setting nerdfonts_install_dir for user-specific installation'
  ansible.builtin.set_fact:
    nerdfonts_install_dir: "{{ nerdfonts_deb_fonts_user_dir }}"
  when:
    - nerdfonts_deb_env is defined
    - "'user' in nerdfonts_deb_env"
  tags: nerdfonts

- name: '[debian] Create NerdFonts folder for system-wode installation'
  ansible.builtin.file:
    path: "{{ nerdfonts_install_dir }}/NerdFonts"
    state: directory
    mode: 0755
  become: true
  when:
    - nerdfonts_deb_env is defined
    - "'system' in nerdfonts_deb_env"
  tags: nerdfonts

- name: '[debian] Create NerdFonts folder for each user'
  ansible.builtin.file:
    path: "{{ nerdfonts_install_dir }}/NerdFonts"
    state: directory
    mode: 0755
  loop: "{{ nerdfonts_users }}"
  become: true
  become_user: "{{ item }}"
  become_method: su
  when:
    - nerdfonts_deb_env is defined
    - "'user' in nerdfonts_deb_env"
  tags: nerdfonts

- name: '[debian] Check if there are any NerdFonts already installed'
  ansible.builtin.stat:
    path: "{{ nerdfonts_install_dir }}/NerdFonts/{{ item.fontname }}"
  loop: "{{ nerdfonts_fonts }}"
  register: nerdfonts_stat
  tags: nerdfonts

- name: '[debian] Combine the results into dictionary with following structure: {<FontName> : <stat.exists>}'
  ansible.builtin.set_fact:
    # https://stackoverflow.com/questions/35605603/using-ansible-set-fact-to-create-a-dictionary-from-register-results
    # FLATTENING THE RESULTS AND COMBINING THEM INTO DICTIONARY WITH SPECIFIED KEY:VALUE STRUCTURE:
    #
    # IF nerdfonts_fonts IS DICTIONARY:
    # nerdfonts_exists: "{{ nerdfonts_exists|default({})|combine({item.item.value.fontname: item.stat.exists}) }}"
    # IF nerdfonts_fonts IS LIST:
    nerdfonts_exists: "{{ nerdfonts_exists|default({})|combine({item.item.fontname: item.stat.exists}) }}"
  loop: "{{ nerdfonts_stat.results }}"
  tags: nerdfonts

- name: '[debian] Copy fonts for system-wide installation'
  ansible.builtin.command: "cp -r /tmp/nerd_fonts/patched-fonts/{{ item.key }} {{ nerdfonts_install_dir }}/NerdFonts/"
  become: true
  loop: "{{ nerdfonts_exists|dict2items }}"
  when: not item.value
  tags: nerdfonts

- name: '[debian] Copy fonts for user-specific installation'
  ansible.builtin.command: "cp -r /tmp/nerd_fonts/patched-fonts/{{ item.key }} {{ nerdfonts_install_dir }}/NerdFonts/"
  loop: "{{ nerdfonts_exists|dict2items }}"
  become: true
  become_user: "{{ item }}"
  become_method: su
  when:
    - nerdfonts_deb_env is defined
    - "'user' in nerdfonts_deb_env"
    - not item.value
  tags: nerdfonts

- name: '[debian] Install specified NerdFonts'
  ansible.builtin.command: "fc-cache -f {{ nerdfonts_install_dir }}"
  # https://stackoverflow.com/questions/47523815/ansible-how-to-check-if-dictionary-has-at-least-one-specified-value
  # Execute command only when some dictionary contains at least one 'false' value:
  when: false in nerdfonts_exists.values()
  tags: nerdfonts
# ==================================================
